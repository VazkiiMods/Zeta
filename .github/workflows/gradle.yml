name: Java CI

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java 21
        run: echo "JAVA_HOME=$JAVA_HOME_21_X64" >> "$GITHUB_ENV"
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle', '**/gradle-wrapper.properties') }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-disabled: ${{ inputs.is-release }}
          cache-read-only: false
      - name: Build with Gradle
        run: ./gradlew build
      #    - name: Build with Gradle
      #      run: ./gradlew pmdMain build
      #    - name: PMD report
      #      uses: jwgmeligmeyling/pmd-github-action@v1
      #      if: failure()
      #      with:
      #        path: '**/reports/pmd/main.xml'
      - name: Stop Gradle
        run: |
          ./gradlew --stop
      - name: Calculate artifact names
        id: calculate_artifact_names
        run: |
          VERSION=$(awk -F ' = ' '/^mod_version/ { print $2; }' gradle.properties)
          echo "forge=build/libs/Zeta-${VERSION}.jar" >> "$GITHUB_OUTPUT"
      - name: Sign jars
        env:
          SIGNING_KEY: ${{ secrets.VIOLET_MOON_SIGNING_KEY }}
        if: ${{ env.SIGNING_KEY != '' }}
        run: |
          echo "${SIGNING_KEY}" | gpg --import -
          gpg --local-user "Violet Moon Signing Key" --armor \
            --detach-sign ${{ steps.calculate_artifact_names.outputs.forge }}
      - name: Archive Forge Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Forge
          path: |
            ${{ steps.calculate_artifact_names.outputs.forge }}
            ${{ steps.calculate_artifact_names.outputs.forge }}.asc
      - name: Upload Releases
        if: startsWith(github.ref, 'refs/tags/release-')
        env:
          GH_TOKEN: ${{ github.token }}
          GIT_REF: ${{ github.ref }}
          FORGE_JAR: ${{ steps.calculate_artifact_names.outputs.forge }}
          CURSEFORGE_TOKEN: ${{ secrets.VAZKII_CURSEFORGE_TOKEN }}
          MODRINTH_TOKEN: ${{ secrets.VAZKII_MODRINTH_TOKEN }}
        run: |
          scripts/upload_releases.sh